[{"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/index.js":"1","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/reportWebVitals.js":"2","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/App.js":"3","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Container.jsx":"4","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Whiteboard.jsx":"5","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Modal/Modal.jsx":"6"},{"size":500,"mtime":1612302672312,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1612302672313,"results":"9","hashOfConfig":"8"},{"size":183,"mtime":1612476623503,"results":"10","hashOfConfig":"8"},{"size":2354,"mtime":1612478774229,"results":"11","hashOfConfig":"8"},{"size":5179,"mtime":1612478858517,"results":"12","hashOfConfig":"8"},{"size":1038,"mtime":1612472371063,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gzdf3l",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/index.js",[],["29","30"],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/reportWebVitals.js",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/App.js",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Container.jsx",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Whiteboard.jsx",["31","32","33","34","35","36","37","38"],"import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst Whiteboard = ({ clearCanvas, colour, erase, setClearCanvas, size }) => {\n    let timeout;\n    let isDrawing = false;\n    const socket = io.connect('http://localhost:5000');\n\n    socket.on(\"canvas-data\", function(data){\n        const interval = setInterval(function(){\n            if(isDrawing) return;\n            isDrawing = true;\n            clearInterval(interval);\n            const image = new Image();\n            const canvas = document.querySelector('#whiteboard');\n            const ctx = canvas.getContext('2d');\n            ctx.strokeStyle = colour;\n            ctx.lineWidth = size;\n            image.onload = function() {\n                ctx.drawImage(image, 0, 0);\n                isDrawing = false;\n            };\n            image.src = data;\n        }, 200)\n    })\n\n    const resetCanvas = () => {\n        const canvas = document.querySelector('#whiteboard');\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height); \n        if(timeout != undefined) clearTimeout(timeout);\n        timeout = setTimeout(function(){\n            const base64ImageData = canvas.toDataURL(\"image/png\");\n            socket.emit(\"canvas-clear\", base64ImageData);\n        }, 1000)\n    }\n\n    socket.on(\"canvas-clear\", function(data) {\n        const interval = setInterval(function(){\n            if(isDrawing) return;\n            isDrawing = true;\n            clearInterval(interval);\n            const image = new Image();\n            const canvas = document.querySelector('#whiteboard');\n            const ctx = canvas.getContext('2d');\n            image.onload = function() {\n                ctx.clearRect(0, 0, canvas.width, canvas.height); \n                isDrawing = false;\n            };\n            image.src = data;\n        }, 200)     \n    })\n\n    const drawOnCanvas = () => {\n        const canvas = document.querySelector('#whiteboard');\n        const ctx = canvas.getContext('2d');\n        const sketch = document.querySelector('#sketch');\n        const sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = colour;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        const onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if(timeout != undefined) clearTimeout(timeout);\n            timeout = setTimeout(function(){\n                const base64ImageData = canvas.toDataURL(\"image/png\");\n                socket.emit(\"canvas-data\", base64ImageData);\n            }, 1000)\n        };\n    }\n\n    const eraserMode = () => {\n        const canvas = document.querySelector('#whiteboard');\n        const ctx = canvas.getContext('2d');\n        // ctx.globalCompositeOperation = 'destination-out';\n        // ctx.lineWidth = 10;\n        if(timeout != undefined) clearTimeout(timeout);\n        timeout = setTimeout(function(){\n            const base64ImageData = canvas.toDataURL(\"image/png\");\n            socket.emit(\"canvas-eraser\", base64ImageData);\n        }, 1000)\n    }\n\n    socket.on(\"canvas-eraser\", function(data) {\n        const interval = setInterval(function(){\n            if(isDrawing) return;\n            isDrawing = true;\n            clearInterval(interval);\n            const image = new Image();\n            const canvas = document.querySelector('#whiteboard');\n            const ctx = canvas.getContext('2d');\n            ctx.globalCompositeOperation = 'destination-out';\n            image.onload = function() {\n                isDrawing = false;\n            };\n            image.src = data;\n        }, 200)     \n    })\n\n    useEffect(() => {\n        drawOnCanvas();\n    }, []);\n\n    useEffect(() => {\n        resetCanvas();\n        setClearCanvas(false);\n    }, [clearCanvas === true]);\n\n    useEffect(() => {\n        if (erase === true) {\n            drawOnCanvas();\n            eraserMode();\n        } else {\n            drawOnCanvas();\n        }\n    }, [erase])\n    \n    return (\n        <>\n            <div className=\"sketch\" id=\"sketch\">\n                <canvas className=\"whiteboard\" id=\"whiteboard\" />\n            </div>\n        </>\n    )\n};\n\nexport default Whiteboard;","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Modal/Modal.jsx",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":31,"column":20,"nodeType":"47","messageId":"48","endLine":31,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":95,"column":24,"nodeType":"47","messageId":"48","endLine":95,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":105,"column":15,"nodeType":"51","messageId":"52","endLine":105,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":108,"column":20,"nodeType":"47","messageId":"48","endLine":108,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":133,"column":8,"nodeType":"55","endLine":133,"endColumn":10,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":138,"column":8,"nodeType":"55","endLine":138,"endColumn":30,"suggestions":"58"},{"ruleId":"53","severity":1,"message":"59","line":138,"column":9,"nodeType":"47","endLine":138,"endColumn":29},{"ruleId":"53","severity":1,"message":"60","line":147,"column":8,"nodeType":"55","endLine":147,"endColumn":15,"suggestions":"61"},{"ruleId":"41","replacedBy":"62"},{"ruleId":"43","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'ctx' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawOnCanvas'. Either include it or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has missing dependencies: 'resetCanvas' and 'setClearCanvas'. Either include them or remove the dependency array. If 'setClearCanvas' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["67"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has missing dependencies: 'drawOnCanvas' and 'eraserMode'. Either include them or remove the dependency array.",["68"],["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [drawOnCanvas]",{"range":"75","text":"76"},"Update the dependencies array to be: [resetCanvas, setClearCanvas]",{"range":"77","text":"78"},"Update the dependencies array to be: [drawOnCanvas, erase, eraserMode]",{"range":"79","text":"80"},[4676,4678],"[drawOnCanvas]",[4765,4787],"[resetCanvas, setClearCanvas]",[4959,4966],"[drawOnCanvas, erase, eraserMode]"]