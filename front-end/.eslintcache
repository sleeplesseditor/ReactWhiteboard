[{"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/index.js":"1","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/reportWebVitals.js":"2","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/App.js":"3","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Container.jsx":"4","/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Whiteboard.jsx":"5"},{"size":500,"mtime":1612302672312,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612302672313,"results":"8","hashOfConfig":"7"},{"size":182,"mtime":1612304371066,"results":"9","hashOfConfig":"7"},{"size":1366,"mtime":1612305577786,"results":"10","hashOfConfig":"7"},{"size":2839,"mtime":1612305481155,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1gzdf3l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/index.js",[],["24","25"],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/reportWebVitals.js",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/App.js",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Container.jsx",[],"/Users/josh/Desktop/CODING/React/Media Interaction/react-whiteboard/front-end/src/components/Whiteboard.jsx",["26","27"],"import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst Whiteboard = ({ colour, size }) => {\n    let timeout;\n    let isDrawing = false;\n    const socket = io.connect('http://localhost:5000');\n\n    // useEffect(() => {\n        \n    // }, [colour, size]);\n    \n\n    socket.on(\"canvas-data\", function(data){\n        const interval = setInterval(function(){\n            if(isDrawing) return;\n            isDrawing = true;\n            clearInterval(interval);\n            const image = new Image();\n            const canvas = document.querySelector('#whiteboard');\n            const ctx = canvas.getContext('2d');\n            ctx.strokeStyle = colour;\n            ctx.lineWidth = size;\n            image.onload = function() {\n                ctx.drawImage(image, 0, 0);\n\n                isDrawing = false;\n            };\n            image.src = data;\n        }, 200)\n    })\n\n    const drawOnCanvas = () => {\n        const canvas = document.querySelector('#whiteboard');\n        const ctx = canvas.getContext('2d');\n\n        const sketch = document.querySelector('#sketch');\n        const sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = colour;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        const onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if(timeout != undefined) clearTimeout(timeout);\n            timeout = setTimeout(function(){\n                const base64ImageData = canvas.toDataURL(\"image/png\");\n                socket.emit(\"canvas-data\", base64ImageData);\n            }, 1000)\n        };\n    }\n\n    useEffect(() => {\n        drawOnCanvas();\n    }, []);\n    \n    return (\n        <div className=\"sketch\" id=\"sketch\">\n            <canvas className=\"whiteboard\" id=\"whiteboard\" />\n        </div>\n    )\n};\n\nexport default Whiteboard;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":75,"column":24,"nodeType":"34","messageId":"35","endLine":75,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":85,"column":8,"nodeType":"38","endLine":85,"endColumn":10,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'drawOnCanvas'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [drawOnCanvas]",{"range":"45","text":"46"},[2658,2660],"[drawOnCanvas]"]